# lambda_name       [Optional] The name of the Lambda function. Overrides the default (repository name)
# description       [Optional] A short description of the Lambda function
# timeout           [Optional] [Default = 30, Max = 900] The maximum time in seconds that the function can run
# memory            [Optional] [Default = 128, Max = 10240] The amount of memory available to the function in MB
# ephemeral_storage [Optional] [Default = 512, Max = 10240] The amount of ephemeral storage available to the function in MB
# lambda_arn        [Optional] The ARN of the Lambda function. If not provided, will be generated based on lambda_name
# role_arn          [Optional] The ARN of the IAM role that the Lambda function assumes. If not provided, will be generated based on lambda_name
# repository_arn    [Optional] The ARN of the ECR repository where the Lambda function's image is stored. If not provided, will be generated based on lambda_name
# policy            [Optional] The IAM policy that defines the permissions for the Lambda function.
#                       - Do not include a policy statement for cloudwatch logs, as it is automatically added by the Lambda service.
#                       - Policy statement with iam actions are not permitted except for iam:List* and iam:Get* actions.
#                       - Policy statements with "secretsmanager:GetSecretValue" action must include fully qualified resource ARNs.
#                       - Policy statements with "lambda:InvokeFunction" action must include fully qualified resource ARNs.


lambda_name = "my-cool-lambda"
description = "Supports GitHub CICD by validating policy statements and then creating/updating lambda"
# timeout = 30
# memory = 128
# ephemeral_storage = 512
repository_arn = "arn:aws:ecr:us-east-1:473958445471:repository/lambda/vaynermedia-newyork/my-test-lambda"
# lambda_arn = "arn:aws:lambda:us-east-1:123456789012:function:my-cool-lambda-lambda"
# role_arn = "arn:aws:iam::123456789012:role/my-cool-lambda-role"

[policy]
Version = "2012-10-17"

# Each policy statement should be prefixed by [[policy.Statement]]
# and should include the following fields:
# - Sid:        [Required] A unique identifier for the statement
# - Effect:     [Required] The effect of the statement (Allow or Deny)
# - Action:     [Required] The action(s) that the statement applies to
# - Resource:   [Required] The resource(s) that the statement applies to
# - Condition:  [Optional] A condition that must be met for the statement to apply

# Example policy statement:
[[policy.Statement]]
Sid = "AllowS3PutAndGet"
Effect = "Allow"
Action = [ "s3:PutObject", "s3:GetObject" ]
Resource = "arn:aws:s3:::my-cool-lambda/*"
# Condition = { "StringEquals" = { "aws:ResourceTag/Key" = "Value" } }
